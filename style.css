html {
  font-family: 'ff-enzo-web', 'Helvetica', 'Arial', 'sans-serif';
  -webkit-font-smoothing: antialiased;
  font-weight: 600;
}
h1, h2, h3, h4, h5, h6 {
  margin: 0;
}
p, .p {
  font-size: 1.2rem;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.8);
}
a {
  color: rgba(0, 0, 0, 1.0);
  font-size: 1.1em;
  text-decoration: none;
}
a:hover, a:active {
  text-decoration: underline;
}

.heavyWeight {
  font-weight: 900;
}
.mediumWeight {
  font-weight: 700;
}
.lightWeight {
  font-weight: 600;
}
.uppers {
  text-transform: uppercase;
}
.nowrap {
  white-space: nowrap;
}

#contentArea {
  padding-top: 50px;
  padding-bottom: 50px;
}
#topBuffer {
  height: 50px;
}
.shiftsMobile {
  margin-left: -200px;
}
.appearsMobile {
  display: none !important;
}

.navItemWrapper {
  cursor: pointer;
  margin: 10px 20px 0;
  background: rgba(0, 0, 0, 0.1);
  -webkit-box-shadow: inset 0px 0px 10px 1px rgba(255, 255, 255, 0.33);
  -moz-box-shadow: inset 0px 0px 10px 1px rgba(255, 255, 255, 0.33);
  box-shadow: inset 0px 0px 10px 1px rgba(255, 255, 255, 0.33);
  border-top: 1px solid rgba(255, 255, 255, 0.6);
  border-left: 1px solid rgba(255, 255, 255, 0.6);
  border-bottom: 1px solid rgba(0, 0, 0, 0.5);
  border-right: 1px solid rgba(0, 0, 0, 0.5);
  border-radius: 6px;
  letter-spacing: 0.1rem;
  color: rgba(255, 255, 255, 1.0);
}
.navItem {
  padding: 12px 10px;
  border-radius: 6px;
  overflow: hidden;
  -webkit-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-transition-property: color;
  transition-property: color;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-timing-function: ease-in-out;
  transition-timing-function: ease-in-out;
}
.navItem:before {
  content: "";
  position: absolute;
  z-index: -1;
  border-radius: 6px;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(255, 255, 255, 0.33);
  -webkit-transform: scaleX(0);
  transform: scaleX(0);
  -webkit-transition-property: transform;
  transition-property: transform;
  -webkit-transition-duration: 0.3s;
  transition-duration: 0.3s;
  -webkit-transition-timing-function: ease-out;
  transition-timing-function: ease-out;
}
.navItem:hover, .navItem:focus, .navItem:active {
  color: rgba(0, 0, 0, 1.0);
  text-shadow: none;
}
.navItem:hover:before, .navItem:focus:before, .navItem:active:before {
  -webkit-transform: scaleX(1);
  transform: scaleX(1);
}

.tag {
  background: rgba(255, 255, 255, 0.7);
  color: rgba(0, 0, 0, 1.0);
  font-weight: 500;
  text-shadow: none;
  border-radius: 4px;
  padding: 2px 5px;
  line-height: 2.2rem;
  margin: 5px 2px;
  font-size: 1.0rem;
}

.highlight {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
  align-items: center;
  -webkit-align-items: center;
  flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
  margin-top: 50px;
}
img.site {
  width: 100%;
  height auto;
  cursor: pointer;
}
.siteHolder {
  border: 1px solid #222;
}

.highlight img {
  border: 1px solid #222;
}
.highlight h3 {
  margin: 20px 0;
}
.highlight > div.desc {
  min-width: 300px;
  flex: 1;
  -webkit-flex: 1;
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}
.highlight > div.desc {
  flex: 10;
  -webkit-flex: 10;
  text-align: left;
  order: 2;
}
.highlight > div.desc::before {
  content: '';
  flex: 1;
  -webkit-flex: 1;
}

.highlight.alt {
  flex-wrap: wrap-reverse;
  -webkit-flex-wrap: wrap-reverse;
}
.highlight.alt > div.pic {
  order: 2;
}
.highlight.alt > div.desc {
  flex: 10;
  -webkit-flex: 10;
  text-align: right;
  order: 1;
}
.highlight.alt > div.desc::before {
  content: none;
}
.highlight.alt > div.desc::after {
  content: '';
  flex: 1;
  -webkit-flex: 1;
}

.noShadow {
  text-shadow: none;
}

ul.resumeList, ul.resumeList ul {
  margin: 0;
  padding: 0;
}
ul.resumeList li, ul.resumeList ul li {
  margin: 0;
  padding: 0;
  line-height: 1.5em;
  margin-top: 10px;
  margin-left: 20px;
}

/* FLEX FRAMEWORK ////////////////////////////////////////////////////////////*/
.flextainer {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}

/* This is the shorthand for flex-grow, flex-shrink and flex-basis combined.
The second and third parameters (flex-shrink and flex-basis) are optional. Default is 0 1 auto. */
.flex0 {
  flex: 0;
  -webkit-flex: 0;
}
.flex1 {
  flex: 1;
  -webkit-flex: 1;
}
.flex2 {
  flex: 2;
  -webkit-flex: 2;
}
.flex3 {
  flex: 3;
  -webkit-flex: 3;
}
.flex4 {
  flex: 4;
  -webkit-flex: 4;
}
.flex5 {
  flex: 5;
  -webkit-flex: 5;
}
.flex7 {
  flex: 7;
  -webkit-flex: 7;
}
.flex10 {
  flex: 10;
  -webkit-flex: 10;
}
.flex13 {
  flex: 13;
  -webkit-flex: 13;
}
.flex15 {
  flex: 15;
  -webkit-flex: 15;
}
.flex30 {
  flex: 30;
  -webkit-flex: 30;
}

/* This establishes the main-axis, thus defining the direction flex items are placed in the flex container.
Flexbox is (aside from optional wrapping) a single-direction layout concept.
Think of flex items as primarily laying out either in horizontal rows or vertical columns. */
.flexrow { /* default */
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}
.flexrowreverse {
  -webkit-box-orient: horizontal;
  -moz-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -moz-box-direction: reverse;
  -webkit-flex-direction: row-reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}
.flexcol {
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  -webkit-box-direction: normal;
  -moz-box-direction: normal;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}
.flexcolreverse {
  -webkit-box-orient: vertical;
  -moz-box-orient: vertical;
  -webkit-box-direction: reverse;
  -moz-box-direction: reverse;
  -webkit-flex-direction: column-reverse;
  -ms-flex-direction: column-reverse;
  flex-direction: column-reverse;
}

/* This defines the alignment along the main axis.
It helps distribute extra free space left over when either all the flex items on a line are inflexible,
or are flexible but have reached their maximum size.
It also exerts some control over the alignment of items when they overflow the line. */
.flexstart {
  justify-content: flex-start;
  -webkit-justify-content: flex-start;
}
.flexcenter {
  justify-content: center;
  -webkit-justify-content: center;
}
.flexend {
  justify-content: flex-end;
  -webkit-justify-content: flex-end;
}
.flexbetween {
  justify-content: space-between;
  -webkit-justify-content: space-between;
}
.flexaround {
  justify-content: space-around;
  -webkit-justify-content: space-around;
}

/* By default, flex items will all try to fit onto one line.
You can change that and allow the items to wrap as needed with this property.
Direction also plays a role here, determining the direction new lines are stacked in. */
.flexwrap {
  flex-wrap: wrap;
  -webkit-flex-wrap: wrap;
}
.flexwrapreverse {
  flex-wrap: wrap-reverse;
  -webkit-flex-wrap: wrap-reverse;
}
.flexnowrap {
  flex-wrap: nowrap;
  -webkit-flex-wrap: nowrap;
}

/* Alignment in other dimension (perpendicular to flex-direction). */
/* Vertical align for Rows.  Horizontal align for Cols. */
.flexitemsstart {
  align-items: flex-start;
  -webkit-align-items: flex-start;
}
.flexitemscenter {
  align-items: center;
  -webkit-align-items: center;
}
.flexitemsend {
  align-items: flex-end;
  -webkit-align-items: flex-end;
}
.flexitemsstretch {
  align-items: stretch;
  -webkit-align-items: stretch;
}
.flexitemsbaseline {
  align-items: baseline;
  -webkit-align-items: baseline;
}

/* This defines the default behaviour for how flex items are laid out along the cross axis on the current line.
Think of it as the justify-content version for the cross-axis (perpendicular to the main-axis). */
.flexselfstart {
  align-self: flex-start;
  -webkit-align-self: flex-start;
}
.flexselfcenter {
  align-self: center;
  -webkit-align-self: center;
}
.flexselfend {
  align-self: flex-end;
  -webkit-align-self: flex-end;
}
.flexselfbaseline {
  align-self: baseline;
  -webkit-align-self: baseline;
}
.flexselfstretch {
  align-self: stretch;
  -webkit-align-self: stretch;
}

/* NOTE: align-content not included. */

/* MOBILE ////////////////////////////////////////////////////////////////////*/
@media (max-width: 1000px) {
  html {
    font-size: 0.7em;
  }
  #contentArea {
    padding-top: 0;
  }
  #topBuffer {
    height: 70px;
  }
  .appearsMobile {
    display: block !important;
  }
  .blockMobile {
    display: block !important;
  }
  .hidesMobile {
    display: none !important;
  }
  .highlight.alt div.desc {
    text-align: left !important;
  }
  .highlight div.pic img {
    height: auto;
    width: auto;
    max-width: 300px;
  }
  .highlight > div.desc::before {
    content: none !important;
  }
  .highlight.alt > div.desc::after {
    content: none !important;
  }
  .scalingImg {
    height: auto;
    width: auto;
    max-width: 300px;
  }
  .shiftsMobile {
    margin-left: 0;
  }
  .navItem {
    padding: 10px 5px !important;
    font-size: 1.3em;
  }
  .navItemWrapper {
    margin: 0 5px !important;
  }
}
